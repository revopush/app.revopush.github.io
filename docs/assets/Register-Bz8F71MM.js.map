{"version":3,"mappings":";2eAQA,KAAM,CAAE,QAAAA,CAAY,EAAAC,EACd,CAAE,MAAAC,EAAO,UAAAC,EAAW,KAAAC,EAAM,KAAAC,CAAS,EAAAC,EAEnCC,EAAeC,EAAA,KACnB,IAAAC,EAAA,IAAM,OAAO,4BAA2C,mCAC1D,EAEMC,EAAaF,OAAK,UAAM,OAAO,0BAAuC,mCAAC,EAEvEG,EAAW,IAAM,CACrB,MAAMC,EAAWC,EAAY,EACvB,CAACC,CAAY,EAAIC,EAAgB,EACjC,CAACC,EAAaC,CAAgB,EAAIC,EAAU,EAC5C,CAACC,EAAeC,CAAc,EAAIC,WAAS,EAAK,EAChD,CAACC,EAAaC,CAAW,EAAIF,WAAS,EAAK,EAE3CG,EAAe,MAAOC,GAAqB,CAC/C,MAAMC,EAAO,MAAMC,EAAqBF,EAAUT,CAAW,EACtD,gBAAS,QAAQU,EAAK,QAAQ,CACvC,EAEA,cACGzB,EACC,WAAA2B,MAAC5B,EACC,UAAA6B,EAAA,KAACC,EAAA,CACC,QAAQ,SACR,MAAM,SACN,MAAO,CAAE,OAAQ,OAAQ,EACzB,SAAQ,GAER,UAACF,MAAAG,EAAA,CACC,gBAACD,EAAK,SAAQ,SAAS,MAAM,SAAS,SAAQ,GAC3C,UAAahB,EAAA,IAAI,cAAc,GAC9Bc,EAAA,IAACI,EAAA,CACC,QAAQ,yBACR,KAAK,OACL,SAAQ,GACR,MAAO,CAAE,MAAO,GAAI,EACtB,EAEFJ,MAAC1B,EAAM,OAAO,EAAG,MAAO,CAAE,aAAc,GAAI,UAAW,EAAG,EAAG,SAE7D,mCACCC,EAAU,OAAO,CAAE,aAAc,EAAM,iBACnC,IACHyB,MAACvB,GAAK,QAAS,IAAMO,EAAS,UAAUK,CAAgB,EAAE,EAAG,SAE7D,YAAQ,IAAI,uBAEd,EACAW,EAAA,IAACK,EAAA,CACC,MAAO,CAAE,MAAO,GAAI,EACpB,MAAM,UACN,QAAQ,QACR,KAAK,QACL,QAAS,IAAMT,EAAa,QAAQ,EACpC,WAAOU,EAAe,IACvB,gCAED,QACC,KAAG,IACJN,EAAA,IAACK,EAAA,CACC,MAAO,CAAE,MAAO,GAAI,EACpB,MAAM,UACN,QAAQ,QACR,KAAK,QACL,QAAS,IAAMT,EAAa,QAAQ,EACpC,WAAOW,EAAe,IACvB,gCAED,QACC,KAAG,UACH,KAAG,IACJP,EAAA,IAACE,EAAA,CACC,MAAO,CAAE,MAAO,GAAI,EACpB,QAAQ,SACR,MAAM,SACN,SAAQ,GAER,SAAAD,EAAA,KAACzB,GAAK,KAAK,YAAY,MAAO,CAAE,UAAW,QAAY,8CACrB,UAC/BC,EAAK,SAAS,IAAMkB,EAAY,EAAI,EAAG,SAExC,uBAAQ,IAAI,MACR,UACHlB,EAAK,SAAS,IAAMe,EAAe,EAAI,EAAG,SAE3C,mBAAO,IAET,IACF,EACF,CACF,SACCgB,EAAc,OAEnB,EACAR,EAAA,IAACrB,EAAA,CACC,OAAQY,EACR,QAAS,IAAMC,EAAe,EAAK,EACrC,EACAQ,MAAClB,GAAW,OAAQY,EAAa,QAAS,IAAMC,EAAY,EAAK,CAAG,IACtE,CAEJ","names":["Content","Layout","Title","Paragraph","Text","Link","Typography","PrivacyModal","lazy","__vitePreload","TermsModal","Register","navigate","useNavigate","searchParams","useSearchParams","originalUrl","originalUrlParam","useOrigin","isPrivacyOpen","setPrivacyOpen","useState","isTermsOpen","setTermOpen","callRegister","provider","data","authRegisterProvider","jsx","jsxs","Flex","Card","Alert","Button","GithubOutlined","GoogleOutlined","ContentFooter"],"ignoreList":[],"sources":["../../src/screens/Login/Register.tsx"],"sourcesContent":["import { Alert, Button, Card, Flex, Layout, Typography } from 'antd';\nimport { authRegisterProvider } from '../../api/client.ts';\nimport ContentFooter from '../../components/Footer/Footer.tsx';\nimport { useNavigate, useSearchParams } from 'react-router';\nimport { GithubOutlined, GoogleOutlined } from '@ant-design/icons';\nimport { useOrigin } from './useOrigin.tsx';\nimport { lazy, useState } from 'react';\n\nconst { Content } = Layout;\nconst { Title, Paragraph, Text, Link } = Typography;\n\nconst PrivacyModal = lazy(\n  () => import('../../components/Privacy/PrivacyModal.tsx')\n);\n\nconst TermsModal = lazy(() => import('../../components/Terms/TermsModal.tsx'));\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [originalUrl, originalUrlParam] = useOrigin();\n  const [isPrivacyOpen, setPrivacyOpen] = useState(false);\n  const [isTermsOpen, setTermOpen] = useState(false);\n\n  const callRegister = async (provider: string) => {\n    const data = await authRegisterProvider(provider, originalUrl);\n    window.location.replace(data.location);\n  };\n\n  return (\n    <Layout>\n      <Content>\n        <Flex\n          justify=\"center\"\n          align=\"center\"\n          style={{ height: '100vh' }}\n          vertical\n        >\n          <Card>\n            <Flex justify=\"center\" align=\"center\" vertical>\n              {searchParams.get('accountEmpty') && (\n                <Alert\n                  message=\"Account doesn't exists\"\n                  type=\"info\"\n                  closable\n                  style={{ width: 350 }}\n                />\n              )}\n              <Title level={3} style={{ marginBottom: 10, marginTop: 10 }}>\n                Create Revopush account\n              </Title>\n              <Paragraph style={{ marginBottom: 20 }}>\n                or{' '}\n                <Link onClick={() => navigate(`/login?${originalUrlParam}`)}>\n                  Sign in\n                </Link>{' '}\n                if you already have\n              </Paragraph>\n              <Button\n                style={{ width: 350 }}\n                color=\"default\"\n                variant=\"solid\"\n                size=\"large\"\n                onClick={() => callRegister('github')}\n                icon={<GithubOutlined />}\n              >\n                Continue with GutHub\n              </Button>\n              <br />\n              <Button\n                style={{ width: 350 }}\n                color=\"primary\"\n                variant=\"solid\"\n                size=\"large\"\n                onClick={() => callRegister('google')}\n                icon={<GoogleOutlined />}\n              >\n                Continue with Google\n              </Button>\n              <br />\n              <br />\n              <Flex\n                style={{ width: 300 }}\n                justify=\"center\"\n                align=\"center\"\n                vertical\n              >\n                <Text type=\"secondary\" style={{ textAlign: 'center' }}>\n                  By continuing, you agree to our{' '}\n                  <Link onClick={() => setTermOpen(true)}>\n                    Terms & Conditions\n                  </Link>{' '}\n                  and{' '}\n                  <Link onClick={() => setPrivacyOpen(true)}>\n                    Privacy Policy\n                  </Link>\n                  .\n                </Text>\n              </Flex>\n            </Flex>\n          </Card>\n          <ContentFooter />\n        </Flex>\n      </Content>\n      <PrivacyModal\n        isOpen={isPrivacyOpen}\n        onClose={() => setPrivacyOpen(false)}\n      />\n      <TermsModal isOpen={isTermsOpen} onClose={() => setTermOpen(false)} />\n    </Layout>\n  );\n};\n\nexport default Register;\n"],"file":"assets/Register-Bz8F71MM.js"}